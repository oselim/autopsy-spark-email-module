/*
 * Autopsy Forensic Browser
 *
 * Copyright 2011-2018 Basis Technology Corp.
 * Contact: carrier <at> sleuthkit <dot> org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.sleuthkit.autopsy.corecomponents;

import java.awt.Component;
import javax.swing.JFrame;
import javax.swing.JPanel;
import org.openide.windows.WindowManager;

/**
 * Displays a panel in a new clean dialog. A clean dialog contains nothing but
 * the panel given to it. No additional buttons or features, except the default
 * close operation, which is set to dispose.
 */
@SuppressWarnings("PMD.SingularField") // UI widgets cause lots of false positives
public class AdvancedConfigurationCleanDialog extends javax.swing.JDialog {

    /**
     * Creates new form AdvancedConfigurationDialog
     */
    public AdvancedConfigurationCleanDialog() {
        this(false);
    }

    /**
     * Creates new form AdvancedConfigurationDialog
     * 
     * @param resizable Is the dialog resizable?
     */
    public AdvancedConfigurationCleanDialog(boolean resizable) {
        super((JFrame) WindowManager.getDefault().getMainWindow(), true);
        setResizable(resizable);
        if (resizable) {
            this.setIconImage(null);
        }
        initComponents();
    }

    /**
     * Display the given panel on a clean dialog.
     *
     * @param panel the panel to display
     */
    public void display(JPanel panel) {
        this.setTitle(panel.getName());

        panel.setAlignmentX(Component.CENTER_ALIGNMENT);
        this.add(panel, 0);
        this.pack();
        this.setLocationRelativeTo(WindowManager.getDefault().getMainWindow());
        this.setVisible(true);
    }

    /**
     * Close the dialog.
     */
    public void close() {
        this.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
